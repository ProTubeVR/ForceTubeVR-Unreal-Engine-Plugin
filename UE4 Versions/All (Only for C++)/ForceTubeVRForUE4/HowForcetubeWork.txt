Before all things :

Don't forget to turn off the bluetooth in Windows before you launch a packaging of your project or it will fail with an Error_UnknownCookFailure.


Requirements : 

First, you have to put this plugin in a "Plugins" folder inside your game directory.

Then, you have to go to "<MyGame>/Source/<MyGame>/<MyGame>.Build.cs" and add "FORCETUBEVRFORUE4" in the string array in the following line : 
PublicDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "InputCore" });
like this : 
PublicDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "InputCore", "FORCETUBEVRFORUE4" });

To call these functions, you need to include "ForceTubeVRFunctions.h" before. You don't have to instantiate UForceTubeVRFunctions, because all these functions are static.

Don't forget to turn on your bluetooth with a paired ForceTubeVR before any test and to turn off the bluetooth before any packaging.


Fonctions:

	FORCETUBEVR void UForceTubeVRFunctions::Kick(uint8 power);

	FORCETUBEVR void UForceTubeVRFunctions::Rumble(uint8, float timeInSeconds);

	FORCETUBEVR void UForceTubeVRFunctions::Shot(uint8, uint8 rumblePower, float rumbleDuration);

	FORCETUBEVR void UForceTubeVRFunctions::SetActiveResearch(bool active);

	FORCETUBEVR uint8 UForceTubeVRFunctions::TempoToKickPower(float tempo);


units : 

power : value to be set from 0 to 255

kickPower : value to be set from 0 to 255 (side note : under 76 value (30%) the kick effect may be supper weak, this value will be setted depending on fire rate need ---> see kick description)

rumblePower : value to be set from 0 to 255

timeInSeconds : set rumble duration in second, 0.1 will activate rumble motor for 100ms (side note : under 0.03s, the motors are not activated enouph to give any effect)

rumbleDuration : set rumble duration in second, 0.1 will activate rumble motor for 100ms (side note : under 0.03s, the motors are not activated enouph to give any effect). You can make a rumble without end setting this parameter to 0.

active : True = the plugin will maintain a thread to watch the connection state of ForceTubeVR and reconnect if needed ; False = this thread will be desactivated ; it is set to True by default


-----------------------------------------------------------Connect--------------------------------------------------------------------------

Connect and pair the Forcetube,
the forcetube himself have to be paired to windows via bluetooth standard connection (see eventual specific tuto to pair it to windows)
The plugin at game start will call once the fonction :
	FORCETUBEVR void InitAsync();
 ---> so if the forcetube is already paired under windows and powered, then the forcetube will pass from "paired" statu to "connected" statu (can see it in Windows Bluetooth manager).
at this point, once connected, all is good !
And,
if the forcetube isn't powered on game start, or was turned off during the game, or if the connection is lost for any other reason,
the fonction "InitAsync()" automatically reconnect the fForceTubeVR when Windows detect the loss of connection
as well you didn't paused the dedicated thread by calling SetActiveResearch(false)


----------------------------------------------------------Haptic effects------------------------------------------------------------------------

ForceTubeVR integrate 2 main haptic effects :
Rumble and Kick

----------------------------------------------------------Rumble----------------------------------------------------------------

Rumble use 2 "standard" rumble motors, one "small" (high frequency little effect) and one "big" (for loud rumble effect),
Those 2 motors are driven by the same signal as following :
-if rumble "power" is from 0 to 49% (0 to 126), only the small will spin (you can modulate the little motor speed, little motor max speed is reatch at 127 power value)
-if rumble "power" is from 50% to 100% (127 to 255), Small motor is driven max speed, big motor spin according to "power" value (255 give the max speed for both motors)
Rumble duration and power can be freely setted up, it depends of your needs
Fonction using it :
	FORCETUBEVR void Rumble(uint8 power, float timeInSeconds);
	FORCETUBEVR void Shot(uint8 kickPower, uint8 rumblePower, float rumbleDuration);

----------------------------------------------------------Kick-----------------------------------------------------------------


The kick uses a solenoid to direct push/kick the user's shoulder,
it's possible to modulate the solenoid's power draw according to your needs (kick power can be set from 0 to 255),
To make it possible, the ForceTube's firmweare modulate power draw timings of the solenoid (depends on "kickpower" lvl, the firmweare will activate the solenoid for a given amont of time)
the activation timing can go from 0 to 100ms,
100ms will give the maximum Kick effect possible (255 value) (use this for big semi auto weapons)
30ms will give the minimal "good enough" effect (76 value) (use this for super light LMGs as P90 to handle high fire rates)

How to set power per weapon :
As said before, activation timings can go from 0 to 100ms,
The solenoid himself need 30ms of pause between each Kick,
so "kick power" can be setted like this :

Kickpower=((WeaponFireRate-30ms)/100)*255

some raw exemples :
M1014:250ms = 100% ---> 255 value
SPAS12:250ms = 100% ---> 255 value
SKS:125ms = 95% ---> 242 value
M39EMR:111ms =81% ---> 206 value
AKM:100ms =70% ---> 178 value
G3:100ms = 70% ---> 178 value
Mk16:100ms =70% ---> 178 value
Mk17:100ms =70% ---> 178 value
AK74u:91ms =61% ---> 156 value
AUG:91ms =61% ---> 156 value
PKM:91ms =61% ---> 156 value
TAR21:91ms =61% ---> 156 value
SA80:83ms =53% ---> 135 value
SVD:83ms =53% ---> 135 value
G36:83ms =53% ---> 135 value
AK5C:83ms =53% ---> 135 value
M249:83ms =53% ---> 135 value
MP5:83ms =53% ---> 135 value
AK12:77ms =47% ---> 120 value
Mk18:77ms =47% ---> 120 value
M16A4:71ms =41% ---> 105 value
552:66ms =36% ---> 92 value
Famas:66ms =36% ---> 92 value
P90:62ms =32% ---> 82 value
VAL:62ms = 32% ---> 82 value
M40A5: bolt action = 100% ---> 255 value
SV98: bolt action = 100% ---> 255 value

Fonction using the kick :
	FORCETUBEVR void Kick(uint8 power);
	FORCETUBEVR void Shot(uint8 kickPower, uint8 rumblePower, float rumbleDuration);



----------------------------------------------------------TempoToKickPower-----------------------------------------------------------------

Use it to get the maximum kick power according to the duration ("tempo") between two shots. 
You can't always put kick power to 255 (100%) because if your tempo is too short, the ForceTubeVR motor won't have the time to reset itself between two shots and you will have some loss of kicks. 
It is useful if you want to make an autoshot with the higher kick power without loss of kicks.

You can use this fonction in connection with :

FORCETUBEVR void Kick(uint8 power);
FORCETUBEVR void Shot(uint8 kickPower, uint8 rumblePower, float rumbleDuration);